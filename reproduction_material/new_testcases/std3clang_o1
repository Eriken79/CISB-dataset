
std-3-clang-14-O1:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c1 2f 00 00 	mov    0x2fc1(%rip),%rax        # 3fd0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4000 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <strtol@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4008 <strtol@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	ff 25 8a 2f 00 00    	jmp    *0x2f8a(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1056:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	45 31 c0             	xor    %r8d,%r8d
    1076:	31 c9                	xor    %ecx,%ecx
    1078:	48 8d 3d 31 01 00 00 	lea    0x131(%rip),%rdi        # 11b0 <main>
    107f:	ff 15 3b 2f 00 00    	call   *0x2f3b(%rip)        # 3fc0 <__libc_start_main@GLIBC_2.34>
    1085:	f4                   	hlt
    1086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    108d:	00 00 00 

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 89 2f 00 00 	lea    0x2f89(%rip),%rdi        # 4020 <__TMC_END__>
    1097:	48 8d 05 82 2f 00 00 	lea    0x2f82(%rip),%rax        # 4020 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 1e 2f 00 00 	mov    0x2f1e(%rip),%rax        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmp    *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	ret
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4020 <__TMC_END__>
    10c7:	48 8d 35 52 2f 00 00 	lea    0x2f52(%rip),%rsi        # 4020 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    $1,%rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 ed 2e 00 00 	mov    0x2eed(%rip),%rax        # 3fd8 <_ITM_registerTMCloneTable@Base>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmp    *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	ret
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64
    1104:	80 3d 15 2f 00 00 00 	cmpb   $0x0,0x2f15(%rip)        # 4020 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d ca 2e 00 00 	cmpq   $0x0,0x2eca(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d f6 2e 00 00 	mov    0x2ef6(%rip),%rdi        # 4018 <__dso_handle>
    1122:	e8 29 ff ff ff       	call   1050 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	call   1090 <deregister_tm_clones>
    112c:	c6 05 ed 2e 00 00 01 	movb   $0x1,0x2eed(%rip)        # 4020 <__TMC_END__>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	ret
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	ret
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64
    1144:	e9 77 ff ff ff       	jmp    10c0 <register_tm_clones>
    1149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001150 <vgPlain_memset>:
    1150:	53                   	push   %rbx
    1151:	48 89 fb             	mov    %rdi,%rbx
    1154:	85 d2                	test   %edx,%edx
    1156:	7e 0a                	jle    1162 <vgPlain_memset+0x12>
    1158:	89 d2                	mov    %edx,%edx
    115a:	48 89 df             	mov    %rbx,%rdi
    115d:	e8 0e 00 00 00       	call   1170 <memset>
    1162:	48 89 d8             	mov    %rbx,%rax
    1165:	5b                   	pop    %rbx
    1166:	c3                   	ret
    1167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    116e:	00 00 

0000000000001170 <memset>:
    1170:	55                   	push   %rbp
    1171:	41 56                	push   %r14
    1173:	53                   	push   %rbx
    1174:	48 89 d5             	mov    %rdx,%rbp
    1177:	41 89 f6             	mov    %esi,%r14d
    117a:	48 89 fb             	mov    %rdi,%rbx
    117d:	48 8d 3d 80 0e 00 00 	lea    0xe80(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1184:	e8 a7 fe ff ff       	call   1030 <puts@plt>
    1189:	85 ed                	test   %ebp,%ebp
    118b:	7e 0d                	jle    119a <memset+0x2a>
    118d:	89 ea                	mov    %ebp,%edx
    118f:	48 89 df             	mov    %rbx,%rdi
    1192:	44 89 f6             	mov    %r14d,%esi
    1195:	e8 d6 ff ff ff       	call   1170 <memset>
    119a:	48 89 d8             	mov    %rbx,%rax
    119d:	5b                   	pop    %rbx
    119e:	41 5e                	pop    %r14
    11a0:	5d                   	pop    %rbp
    11a1:	c3                   	ret
    11a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    11a9:	00 00 00 
    11ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000011b0 <main>:
    11b0:	41 57                	push   %r15
    11b2:	41 56                	push   %r14
    11b4:	53                   	push   %rbx
    11b5:	48 89 f3             	mov    %rsi,%rbx
    11b8:	4c 8b 76 08          	mov    0x8(%rsi),%r14
    11bc:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
    11c0:	31 f6                	xor    %esi,%esi
    11c2:	ba 0a 00 00 00       	mov    $0xa,%edx
    11c7:	e8 74 fe ff ff       	call   1040 <strtol@plt>
    11cc:	49 89 c7             	mov    %rax,%r15
    11cf:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    11d3:	31 f6                	xor    %esi,%esi
    11d5:	ba 0a 00 00 00       	mov    $0xa,%edx
    11da:	e8 61 fe ff ff       	call   1040 <strtol@plt>
    11df:	48 63 d0             	movslq %eax,%rdx
    11e2:	4c 89 f7             	mov    %r14,%rdi
    11e5:	44 89 fe             	mov    %r15d,%esi
    11e8:	e8 83 ff ff ff       	call   1170 <memset>
    11ed:	4c 89 f7             	mov    %r14,%rdi
    11f0:	e8 3b fe ff ff       	call   1030 <puts@plt>
    11f5:	31 c0                	xor    %eax,%eax
    11f7:	5b                   	pop    %rbx
    11f8:	41 5e                	pop    %r14
    11fa:	41 5f                	pop    %r15
    11fc:	c3                   	ret

Disassembly of section .fini:

0000000000001200 <_fini>:
    1200:	f3 0f 1e fa          	endbr64
    1204:	48 83 ec 08          	sub    $0x8,%rsp
    1208:	48 83 c4 08          	add    $0x8,%rsp
    120c:	c3                   	ret
