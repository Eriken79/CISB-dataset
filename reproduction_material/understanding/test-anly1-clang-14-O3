	.text
	.file	"test-anly1.c"
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4                               # -- Begin function main
.LCPI0_0:
	.zero	16,65
.LCPI0_1:
	.zero	16,66
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movaps	.LCPI0_0(%rip), %xmm0           # xmm0 = [65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65]
	movaps	%xmm0, 16(%rsp)
	movaps	.LCPI0_1(%rip), %xmm0           # xmm0 = [66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66]
	movaps	%xmm0, (%rsp)
	leaq	.L.str(%rip), %rdi
	movl	$16, %esi
	xorl	%eax, %eax
	callq	printf@PLT
	xorl	%edi, %edi
	callq	fflush@PLT
	leaq	16(%rsp), %r14
	movq	%r14, %rdi
	callq	strlen@PLT
	movq	%rax, %r12
	leaq	.L.str.1(%rip), %rdi
	movq	%rax, %rsi
	movq	%r14, %rdx
	xorl	%eax, %eax
	callq	printf@PLT
	movq	%rsp, %r15
	movq	%r15, %rdi
	callq	strlen@PLT
	leaq	.L.str.2(%rip), %rdi
	movq	%rax, %rsi
	movq	%r15, %rdx
	xorl	%eax, %eax
	callq	printf@PLT
	leaq	.L.str.3(%rip), %rdi
	movl	$16, %esi
	xorl	%eax, %eax
	callq	printf@PLT
	leaq	.L.str.4(%rip), %rdi
	movq	%r12, %rsi
	xorl	%eax, %eax
	callq	printf@PLT
	cmpq	$15, %r12
	movl	$15, %ebx
	cmovbq	%r12, %rbx
	leaq	.L.str.5(%rip), %rdi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	callq	printf@PLT
	movq	%r14, %rdi
	movq	%r15, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
	movb	$0, (%rsp,%rbx)
	cmpb	$0, (%rsp)
	je	.LBB0_2
# %bb.1:
	leaq	.L.str.6(%rip), %rdi
	callq	puts@PLT
.LBB0_2:
	movq	%rsp, %rdi
	callq	strlen@PLT
	leaq	.L.str.7(%rip), %rdi
	movq	%rax, %rsi
	xorl	%eax, %eax
	callq	printf@PLT
	xorl	%edi, %edi
	callq	fflush@PLT
	xorl	%edi, %edi
	callq	fflush@PLT
	leaq	.Lstr(%rip), %rdi
	callq	puts@PLT
	xorl	%eax, %eax
	addq	$40, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end0:
	.size	main, .Lfunc_end0-main
	.cfi_endproc
                                        # -- End function
	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"MY_SIZE: %d\n"
	.size	.L.str, 13

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"strlen of src: %ld %p\n"
	.size	.L.str.1, 23

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	"strlen of dst: %ld %p\n"
	.size	.L.str.2, 23

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	"size before ternary: %ld\n"
	.size	.L.str.3, 26

	.type	.L.str.4,@object                # @.str.4
.L.str.4:
	.asciz	"ret before ternary: %ld\n"
	.size	.L.str.4, 25

	.type	.L.str.5,@object                # @.str.5
.L.str.5:
	.asciz	"len after ternary: %ld\n"
	.size	.L.str.5, 24

	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	"ok"
	.size	.L.str.6, 3

	.type	.L.str.7,@object                # @.str.7
.L.str.7:
	.asciz	"dst: %zu\n"
	.size	.L.str.7, 10

	.type	.Lstr,@object                   # @str
.Lstr:
	.asciz	"done..."
	.size	.Lstr, 8

	.ident	"Ubuntu clang version 14.0.6"
	.section	".note.GNU-stack","",@progbits
	.addrsig
