
./cast-4-gcc-12-O1:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	push   0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 8c 2f 00 00    	jmp    *0x2f8c(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)
    1030:	f3 0f 1e fa          	endbr64
    1034:	68 00 00 00 00       	push   $0x0
    1039:	e9 e2 ff ff ff       	jmp    1020 <_init+0x20>
    103e:	66 90                	xchg   %ax,%ax
    1040:	f3 0f 1e fa          	endbr64
    1044:	68 01 00 00 00       	push   $0x1
    1049:	e9 d2 ff ff ff       	jmp    1020 <_init+0x20>
    104e:	66 90                	xchg   %ax,%ax
    1050:	f3 0f 1e fa          	endbr64
    1054:	68 02 00 00 00       	push   $0x2
    1059:	e9 c2 ff ff ff       	jmp    1020 <_init+0x20>
    105e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64
    1064:	ff 25 8e 2f 00 00    	jmp    *0x2f8e(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001070 <putchar@plt>:
    1070:	f3 0f 1e fa          	endbr64
    1074:	ff 25 46 2f 00 00    	jmp    *0x2f46(%rip)        # 3fc0 <putchar@GLIBC_2.2.5>
    107a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001080 <__stack_chk_fail@plt>:
    1080:	f3 0f 1e fa          	endbr64
    1084:	ff 25 3e 2f 00 00    	jmp    *0x2f3e(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    108a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001090 <__printf_chk@plt>:
    1090:	f3 0f 1e fa          	endbr64
    1094:	ff 25 36 2f 00 00    	jmp    *0x2f36(%rip)        # 3fd0 <__printf_chk@GLIBC_2.3.4>
    109a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	45 31 c0             	xor    %r8d,%r8d
    10b6:	31 c9                	xor    %ecx,%ecx
    10b8:	48 8d 3d 43 02 00 00 	lea    0x243(%rip),%rdi        # 1302 <main>
    10bf:	ff 15 13 2f 00 00    	call   *0x2f13(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10c5:	f4                   	hlt
    10c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10cd:	00 00 00 

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d a9 2f 00 00 	lea    0x2fa9(%rip),%rdi        # 4080 <__TMC_END__>
    10d7:	48 8d 05 a2 2f 00 00 	lea    0x2fa2(%rip),%rax        # 4080 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 f6 2e 00 00 	mov    0x2ef6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmp    *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	ret
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4080 <__TMC_END__>
    1107:	48 8d 35 72 2f 00 00 	lea    0x2f72(%rip),%rsi        # 4080 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    $1,%rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmp    *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	ret
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64
    1144:	80 3d 35 2f 00 00 00 	cmpb   $0x0,0x2f35(%rip)        # 4080 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 2e 00 00 	cmpq   $0x0,0x2ea2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    0x2ea6(%rip),%rdi        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	call   1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	call   10d0 <deregister_tm_clones>
    116c:	c6 05 0d 2f 00 00 01 	movb   $0x1,0x2f0d(%rip)        # 4080 <__TMC_END__>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	ret
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	ret
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64
    1184:	e9 77 ff ff ff       	jmp    1100 <register_tm_clones>

0000000000001189 <pmac64>:
    1189:	48 83 ec 08          	sub    $0x8,%rsp
    118d:	48 89 fa             	mov    %rdi,%rdx
    1190:	48 89 f1             	mov    %rsi,%rcx
    1193:	48 8d 35 6a 0e 00 00 	lea    0xe6a(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    119a:	bf 02 00 00 00       	mov    $0x2,%edi
    119f:	b8 00 00 00 00       	mov    $0x0,%eax
    11a4:	e8 e7 fe ff ff       	call   1090 <__printf_chk@plt>
    11a9:	48 83 c4 08          	add    $0x8,%rsp
    11ad:	c3                   	ret

00000000000011ae <pmac>:
    11ae:	41 54                	push   %r12
    11b0:	55                   	push   %rbp
    11b1:	53                   	push   %rbx
    11b2:	48 89 f5             	mov    %rsi,%rbp
    11b5:	41 89 d4             	mov    %edx,%r12d
    11b8:	48 89 fa             	mov    %rdi,%rdx
    11bb:	48 8d 35 4d 0e 00 00 	lea    0xe4d(%rip),%rsi        # 200f <_IO_stdin_used+0xf>
    11c2:	bf 02 00 00 00       	mov    $0x2,%edi
    11c7:	b8 00 00 00 00       	mov    $0x0,%eax
    11cc:	e8 bf fe ff ff       	call   1090 <__printf_chk@plt>
    11d1:	45 85 e4             	test   %r12d,%r12d
    11d4:	7e 2e                	jle    1204 <pmac+0x56>
    11d6:	48 89 eb             	mov    %rbp,%rbx
    11d9:	4d 63 e4             	movslq %r12d,%r12
    11dc:	4c 01 e5             	add    %r12,%rbp
    11df:	4c 8d 25 2d 0e 00 00 	lea    0xe2d(%rip),%r12        # 2013 <_IO_stdin_used+0x13>
    11e6:	0f b6 13             	movzbl (%rbx),%edx
    11e9:	4c 89 e6             	mov    %r12,%rsi
    11ec:	bf 02 00 00 00       	mov    $0x2,%edi
    11f1:	b8 00 00 00 00       	mov    $0x0,%eax
    11f6:	e8 95 fe ff ff       	call   1090 <__printf_chk@plt>
    11fb:	48 83 c3 01          	add    $0x1,%rbx
    11ff:	48 39 eb             	cmp    %rbp,%rbx
    1202:	75 e2                	jne    11e6 <pmac+0x38>
    1204:	bf 0a 00 00 00       	mov    $0xa,%edi
    1209:	e8 62 fe ff ff       	call   1070 <putchar@plt>
    120e:	5b                   	pop    %rbx
    120f:	5d                   	pop    %rbp
    1210:	41 5c                	pop    %r12
    1212:	c3                   	ret

0000000000001213 <IPsecCacheBuildImpl>:
    1213:	41 54                	push   %r12
    1215:	55                   	push   %rbp
    1216:	53                   	push   %rbx
    1217:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
    121e:	89 fd                	mov    %edi,%ebp
    1220:	48 89 f3             	mov    %rsi,%rbx
    1223:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    122a:	00 00 
    122c:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    1233:	00 
    1234:	31 c0                	xor    %eax,%eax
    1236:	48 89 e2             	mov    %rsp,%rdx
    1239:	b9 1e 00 00 00       	mov    $0x1e,%ecx
    123e:	48 89 d7             	mov    %rdx,%rdi
    1241:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    1244:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    124a:	4c 8d 25 ef 2d 00 00 	lea    0x2def(%rip),%r12        # 4040 <DATA_UNI_MAC_l>
    1251:	40 0f b6 ed          	movzbl %bpl,%ebp
    1255:	49 8b 34 ec          	mov    (%r12,%rbp,8),%rsi
    1259:	48 8d 3d b9 0d 00 00 	lea    0xdb9(%rip),%rdi        # 2019 <_IO_stdin_used+0x19>
    1260:	e8 24 ff ff ff       	call   1189 <pmac64>
    1265:	48 8b 33             	mov    (%rbx),%rsi
    1268:	48 8d 3d af 0d 00 00 	lea    0xdaf(%rip),%rdi        # 201e <_IO_stdin_used+0x1e>
    126f:	e8 15 ff ff ff       	call   1189 <pmac64>
    1274:	49 8b 04 ec          	mov    (%r12,%rbp,8),%rax
    1278:	66 89 84 24 fa 00 00 	mov    %ax,0xfa(%rsp)
    127f:	00 
    1280:	89 c2                	mov    %eax,%edx
    1282:	c1 fa 10             	sar    $0x10,%edx
    1285:	66 89 94 24 fc 00 00 	mov    %dx,0xfc(%rsp)
    128c:	00 
    128d:	48 c1 e0 10          	shl    $0x10,%rax
    1291:	48 c1 f8 30          	sar    $0x30,%rax
    1295:	66 89 84 24 fe 00 00 	mov    %ax,0xfe(%rsp)
    129c:	00 
    129d:	48 8b 03             	mov    (%rbx),%rax
    12a0:	66 89 84 24 f4 00 00 	mov    %ax,0xf4(%rsp)
    12a7:	00 
    12a8:	89 c2                	mov    %eax,%edx
    12aa:	c1 fa 10             	sar    $0x10,%edx
    12ad:	66 89 94 24 f6 00 00 	mov    %dx,0xf6(%rsp)
    12b4:	00 
    12b5:	48 c1 e0 10          	shl    $0x10,%rax
    12b9:	48 c1 f8 30          	sar    $0x30,%rax
    12bd:	66 89 84 24 f8 00 00 	mov    %ax,0xf8(%rsp)
    12c4:	00 
    12c5:	48 8d b4 24 f4 00 00 	lea    0xf4(%rsp),%rsi
    12cc:	00 
    12cd:	ba 0c 00 00 00       	mov    $0xc,%edx
    12d2:	48 8d 3d 4a 0d 00 00 	lea    0xd4a(%rip),%rdi        # 2023 <_IO_stdin_used+0x23>
    12d9:	e8 d0 fe ff ff       	call   11ae <pmac>
    12de:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    12e5:	00 
    12e6:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    12ed:	00 00 
    12ef:	75 0c                	jne    12fd <IPsecCacheBuildImpl+0xea>
    12f1:	48 81 c4 10 01 00 00 	add    $0x110,%rsp
    12f8:	5b                   	pop    %rbx
    12f9:	5d                   	pop    %rbp
    12fa:	41 5c                	pop    %r12
    12fc:	c3                   	ret
    12fd:	e8 7e fd ff ff       	call   1080 <__stack_chk_fail@plt>

0000000000001302 <main>:
    1302:	f3 0f 1e fa          	endbr64
    1306:	48 83 ec 08          	sub    $0x8,%rsp
    130a:	48 8d 35 0f 2d 00 00 	lea    0x2d0f(%rip),%rsi        # 4020 <dst_mac>
    1311:	bf 01 00 00 00       	mov    $0x1,%edi
    1316:	e8 f8 fe ff ff       	call   1213 <IPsecCacheBuildImpl>
    131b:	b8 00 00 00 00       	mov    $0x0,%eax
    1320:	48 83 c4 08          	add    $0x8,%rsp
    1324:	c3                   	ret

Disassembly of section .fini:

0000000000001328 <_fini>:
    1328:	f3 0f 1e fa          	endbr64
    132c:	48 83 ec 08          	sub    $0x8,%rsp
    1330:	48 83 c4 08          	add    $0x8,%rsp
    1334:	c3                   	ret
