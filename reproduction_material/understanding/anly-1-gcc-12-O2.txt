
anly-1-gcc-12-O2:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 7a 2f 00 00    	push   0x2f7a(%rip)        # 3fa0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 7c 2f 00 00    	jmp    *0x2f7c(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)
    1030:	f3 0f 1e fa          	endbr64
    1034:	68 00 00 00 00       	push   $0x0
    1039:	e9 e2 ff ff ff       	jmp    1020 <_init+0x20>
    103e:	66 90                	xchg   %ax,%ax
    1040:	f3 0f 1e fa          	endbr64
    1044:	68 01 00 00 00       	push   $0x1
    1049:	e9 d2 ff ff ff       	jmp    1020 <_init+0x20>
    104e:	66 90                	xchg   %ax,%ax
    1050:	f3 0f 1e fa          	endbr64
    1054:	68 02 00 00 00       	push   $0x2
    1059:	e9 c2 ff ff ff       	jmp    1020 <_init+0x20>
    105e:	66 90                	xchg   %ax,%ax
    1060:	f3 0f 1e fa          	endbr64
    1064:	68 03 00 00 00       	push   $0x3
    1069:	e9 b2 ff ff ff       	jmp    1020 <_init+0x20>
    106e:	66 90                	xchg   %ax,%ax
    1070:	f3 0f 1e fa          	endbr64
    1074:	68 04 00 00 00       	push   $0x4
    1079:	e9 a2 ff ff ff       	jmp    1020 <_init+0x20>
    107e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

0000000000001080 <__cxa_finalize@plt>:
    1080:	f3 0f 1e fa          	endbr64
    1084:	ff 25 6e 2f 00 00    	jmp    *0x2f6e(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    108a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001090 <puts@plt>:
    1090:	f3 0f 1e fa          	endbr64
    1094:	ff 25 16 2f 00 00    	jmp    *0x2f16(%rip)        # 3fb0 <puts@GLIBC_2.2.5>
    109a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000010a0 <strlen@plt>:
    10a0:	f3 0f 1e fa          	endbr64
    10a4:	ff 25 0e 2f 00 00    	jmp    *0x2f0e(%rip)        # 3fb8 <strlen@GLIBC_2.2.5>
    10aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000010b0 <__stack_chk_fail@plt>:
    10b0:	f3 0f 1e fa          	endbr64
    10b4:	ff 25 06 2f 00 00    	jmp    *0x2f06(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    10ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000010c0 <fflush@plt>:
    10c0:	f3 0f 1e fa          	endbr64
    10c4:	ff 25 fe 2e 00 00    	jmp    *0x2efe(%rip)        # 3fc8 <fflush@GLIBC_2.2.5>
    10ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000010d0 <__printf_chk@plt>:
    10d0:	f3 0f 1e fa          	endbr64
    10d4:	ff 25 f6 2e 00 00    	jmp    *0x2ef6(%rip)        # 3fd0 <__printf_chk@GLIBC_2.3.4>
    10da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010e0 <main>:
    10e0:	f3 0f 1e fa          	endbr64
    10e4:	55                   	push   %rbp
    10e5:	ba 10 00 00 00       	mov    $0x10,%edx
    10ea:	bf 02 00 00 00       	mov    $0x2,%edi
    10ef:	48 8d 35 0e 0f 00 00 	lea    0xf0e(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    10f6:	53                   	push   %rbx
    10f7:	48 83 ec 38          	sub    $0x38,%rsp
    10fb:	66 0f 6f 05 2d 0f 00 	movdqa 0xf2d(%rip),%xmm0        # 2030 <_IO_stdin_used+0x30>
    1102:	00 
    1103:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    110a:	00 00 
    110c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    1111:	31 c0                	xor    %eax,%eax
    1113:	48 89 e5             	mov    %rsp,%rbp
    1116:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    111b:	0f 29 04 24          	movaps %xmm0,(%rsp)
    111f:	66 0f 6f 05 19 0f 00 	movdqa 0xf19(%rip),%xmm0        # 2040 <_IO_stdin_used+0x40>
    1126:	00 
    1127:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    112c:	e8 9f ff ff ff       	call   10d0 <__printf_chk@plt>
    1131:	31 ff                	xor    %edi,%edi
    1133:	e8 88 ff ff ff       	call   10c0 <fflush@plt>
    1138:	48 89 ef             	mov    %rbp,%rdi
    113b:	e8 60 ff ff ff       	call   10a0 <strlen@plt>
    1140:	48 89 de             	mov    %rbx,%rsi
    1143:	48 89 ea             	mov    %rbp,%rdx
    1146:	83 f8 08             	cmp    $0x8,%eax
    1149:	0f 83 a3 00 00 00    	jae    11f2 <main+0x112>
    114f:	31 c9                	xor    %ecx,%ecx
    1151:	a8 04                	test   $0x4,%al
    1153:	75 7e                	jne    11d3 <main+0xf3>
    1155:	a8 02                	test   $0x2,%al
    1157:	0f 85 84 00 00 00    	jne    11e1 <main+0x101>
    115d:	a8 01                	test   $0x1,%al
    115f:	75 69                	jne    11ca <main+0xea>
    1161:	c6 44 04 10 00       	movb   $0x0,0x10(%rsp,%rax,1)
    1166:	80 7c 24 10 00       	cmpb   $0x0,0x10(%rsp)
    116b:	74 0c                	je     1179 <main+0x99>
    116d:	48 8d 3d 9d 0e 00 00 	lea    0xe9d(%rip),%rdi        # 2011 <_IO_stdin_used+0x11>
    1174:	e8 17 ff ff ff       	call   1090 <puts@plt>
    1179:	48 89 df             	mov    %rbx,%rdi
    117c:	e8 1f ff ff ff       	call   10a0 <strlen@plt>
    1181:	48 8d 35 8c 0e 00 00 	lea    0xe8c(%rip),%rsi        # 2014 <_IO_stdin_used+0x14>
    1188:	bf 02 00 00 00       	mov    $0x2,%edi
    118d:	48 89 c2             	mov    %rax,%rdx
    1190:	31 c0                	xor    %eax,%eax
    1192:	e8 39 ff ff ff       	call   10d0 <__printf_chk@plt>
    1197:	31 ff                	xor    %edi,%edi
    1199:	e8 22 ff ff ff       	call   10c0 <fflush@plt>
    119e:	31 ff                	xor    %edi,%edi
    11a0:	e8 1b ff ff ff       	call   10c0 <fflush@plt>
    11a5:	48 8d 3d 72 0e 00 00 	lea    0xe72(%rip),%rdi        # 201e <_IO_stdin_used+0x1e>
    11ac:	e8 df fe ff ff       	call   1090 <puts@plt>
    11b1:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    11b6:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    11bd:	00 00 
    11bf:	75 56                	jne    1217 <main+0x137>
    11c1:	48 83 c4 38          	add    $0x38,%rsp
    11c5:	31 c0                	xor    %eax,%eax
    11c7:	5b                   	pop    %rbx
    11c8:	5d                   	pop    %rbp
    11c9:	c3                   	ret
    11ca:	0f b6 14 0a          	movzbl (%rdx,%rcx,1),%edx
    11ce:	88 14 0e             	mov    %dl,(%rsi,%rcx,1)
    11d1:	eb 8e                	jmp    1161 <main+0x81>
    11d3:	8b 0a                	mov    (%rdx),%ecx
    11d5:	89 0e                	mov    %ecx,(%rsi)
    11d7:	b9 04 00 00 00       	mov    $0x4,%ecx
    11dc:	e9 74 ff ff ff       	jmp    1155 <main+0x75>
    11e1:	0f b7 3c 0a          	movzwl (%rdx,%rcx,1),%edi
    11e5:	66 89 3c 0e          	mov    %di,(%rsi,%rcx,1)
    11e9:	48 83 c1 02          	add    $0x2,%rcx
    11ed:	e9 6b ff ff ff       	jmp    115d <main+0x7d>
    11f2:	89 c7                	mov    %eax,%edi
    11f4:	31 d2                	xor    %edx,%edx
    11f6:	83 e7 f8             	and    $0xfffffff8,%edi
    11f9:	89 d1                	mov    %edx,%ecx
    11fb:	83 c2 08             	add    $0x8,%edx
    11fe:	48 8b 74 0d 00       	mov    0x0(%rbp,%rcx,1),%rsi
    1203:	48 89 34 0b          	mov    %rsi,(%rbx,%rcx,1)
    1207:	39 fa                	cmp    %edi,%edx
    1209:	72 ee                	jb     11f9 <main+0x119>
    120b:	48 8d 34 13          	lea    (%rbx,%rdx,1),%rsi
    120f:	48 01 ea             	add    %rbp,%rdx
    1212:	e9 38 ff ff ff       	jmp    114f <main+0x6f>
    1217:	e8 94 fe ff ff       	call   10b0 <__stack_chk_fail@plt>
    121c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001220 <_start>:
    1220:	f3 0f 1e fa          	endbr64
    1224:	31 ed                	xor    %ebp,%ebp
    1226:	49 89 d1             	mov    %rdx,%r9
    1229:	5e                   	pop    %rsi
    122a:	48 89 e2             	mov    %rsp,%rdx
    122d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1231:	50                   	push   %rax
    1232:	54                   	push   %rsp
    1233:	45 31 c0             	xor    %r8d,%r8d
    1236:	31 c9                	xor    %ecx,%ecx
    1238:	48 8d 3d a1 fe ff ff 	lea    -0x15f(%rip),%rdi        # 10e0 <main>
    123f:	ff 15 93 2d 00 00    	call   *0x2d93(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1245:	f4                   	hlt
    1246:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    124d:	00 00 00 

0000000000001250 <deregister_tm_clones>:
    1250:	48 8d 3d b9 2d 00 00 	lea    0x2db9(%rip),%rdi        # 4010 <__TMC_END__>
    1257:	48 8d 05 b2 2d 00 00 	lea    0x2db2(%rip),%rax        # 4010 <__TMC_END__>
    125e:	48 39 f8             	cmp    %rdi,%rax
    1261:	74 15                	je     1278 <deregister_tm_clones+0x28>
    1263:	48 8b 05 76 2d 00 00 	mov    0x2d76(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    126a:	48 85 c0             	test   %rax,%rax
    126d:	74 09                	je     1278 <deregister_tm_clones+0x28>
    126f:	ff e0                	jmp    *%rax
    1271:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1278:	c3                   	ret
    1279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001280 <register_tm_clones>:
    1280:	48 8d 3d 89 2d 00 00 	lea    0x2d89(%rip),%rdi        # 4010 <__TMC_END__>
    1287:	48 8d 35 82 2d 00 00 	lea    0x2d82(%rip),%rsi        # 4010 <__TMC_END__>
    128e:	48 29 fe             	sub    %rdi,%rsi
    1291:	48 89 f0             	mov    %rsi,%rax
    1294:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1298:	48 c1 f8 03          	sar    $0x3,%rax
    129c:	48 01 c6             	add    %rax,%rsi
    129f:	48 d1 fe             	sar    $1,%rsi
    12a2:	74 14                	je     12b8 <register_tm_clones+0x38>
    12a4:	48 8b 05 45 2d 00 00 	mov    0x2d45(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    12ab:	48 85 c0             	test   %rax,%rax
    12ae:	74 08                	je     12b8 <register_tm_clones+0x38>
    12b0:	ff e0                	jmp    *%rax
    12b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    12b8:	c3                   	ret
    12b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012c0 <__do_global_dtors_aux>:
    12c0:	f3 0f 1e fa          	endbr64
    12c4:	80 3d 45 2d 00 00 00 	cmpb   $0x0,0x2d45(%rip)        # 4010 <__TMC_END__>
    12cb:	75 2b                	jne    12f8 <__do_global_dtors_aux+0x38>
    12cd:	55                   	push   %rbp
    12ce:	48 83 3d 22 2d 00 00 	cmpq   $0x0,0x2d22(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    12d5:	00 
    12d6:	48 89 e5             	mov    %rsp,%rbp
    12d9:	74 0c                	je     12e7 <__do_global_dtors_aux+0x27>
    12db:	48 8b 3d 26 2d 00 00 	mov    0x2d26(%rip),%rdi        # 4008 <__dso_handle>
    12e2:	e8 99 fd ff ff       	call   1080 <__cxa_finalize@plt>
    12e7:	e8 64 ff ff ff       	call   1250 <deregister_tm_clones>
    12ec:	c6 05 1d 2d 00 00 01 	movb   $0x1,0x2d1d(%rip)        # 4010 <__TMC_END__>
    12f3:	5d                   	pop    %rbp
    12f4:	c3                   	ret
    12f5:	0f 1f 00             	nopl   (%rax)
    12f8:	c3                   	ret
    12f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001300 <frame_dummy>:
    1300:	f3 0f 1e fa          	endbr64
    1304:	e9 77 ff ff ff       	jmp    1280 <register_tm_clones>

Disassembly of section .fini:

000000000000130c <_fini>:
    130c:	f3 0f 1e fa          	endbr64
    1310:	48 83 ec 08          	sub    $0x8,%rsp
    1314:	48 83 c4 08          	add    $0x8,%rsp
    1318:	c3                   	ret
