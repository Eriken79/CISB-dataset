
./anly-3-clang-14-O1:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c1 2f 00 00 	mov    0x2fc1(%rip),%rax        # 3fd0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4000 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <printf@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4008 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <strtol@plt>:
    1050:	ff 25 ba 2f 00 00    	jmp    *0x2fba(%rip)        # 4010 <strtol@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	ff 25 7a 2f 00 00    	jmp    *0x2f7a(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1066:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001070 <_start>:
    1070:	f3 0f 1e fa          	endbr64
    1074:	31 ed                	xor    %ebp,%ebp
    1076:	49 89 d1             	mov    %rdx,%r9
    1079:	5e                   	pop    %rsi
    107a:	48 89 e2             	mov    %rsp,%rdx
    107d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1081:	50                   	push   %rax
    1082:	54                   	push   %rsp
    1083:	45 31 c0             	xor    %r8d,%r8d
    1086:	31 c9                	xor    %ecx,%ecx
    1088:	48 8d 3d 11 01 00 00 	lea    0x111(%rip),%rdi        # 11a0 <main>
    108f:	ff 15 2b 2f 00 00    	call   *0x2f2b(%rip)        # 3fc0 <__libc_start_main@GLIBC_2.34>
    1095:	f4                   	hlt
    1096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    109d:	00 00 00 

00000000000010a0 <deregister_tm_clones>:
    10a0:	48 8d 3d 81 2f 00 00 	lea    0x2f81(%rip),%rdi        # 4028 <__TMC_END__>
    10a7:	48 8d 05 7a 2f 00 00 	lea    0x2f7a(%rip),%rax        # 4028 <__TMC_END__>
    10ae:	48 39 f8             	cmp    %rdi,%rax
    10b1:	74 15                	je     10c8 <deregister_tm_clones+0x28>
    10b3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10ba:	48 85 c0             	test   %rax,%rax
    10bd:	74 09                	je     10c8 <deregister_tm_clones+0x28>
    10bf:	ff e0                	jmp    *%rax
    10c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10c8:	c3                   	ret
    10c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010d0 <register_tm_clones>:
    10d0:	48 8d 3d 51 2f 00 00 	lea    0x2f51(%rip),%rdi        # 4028 <__TMC_END__>
    10d7:	48 8d 35 4a 2f 00 00 	lea    0x2f4a(%rip),%rsi        # 4028 <__TMC_END__>
    10de:	48 29 fe             	sub    %rdi,%rsi
    10e1:	48 89 f0             	mov    %rsi,%rax
    10e4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10e8:	48 c1 f8 03          	sar    $0x3,%rax
    10ec:	48 01 c6             	add    %rax,%rsi
    10ef:	48 d1 fe             	sar    $1,%rsi
    10f2:	74 14                	je     1108 <register_tm_clones+0x38>
    10f4:	48 8b 05 dd 2e 00 00 	mov    0x2edd(%rip),%rax        # 3fd8 <_ITM_registerTMCloneTable@Base>
    10fb:	48 85 c0             	test   %rax,%rax
    10fe:	74 08                	je     1108 <register_tm_clones+0x38>
    1100:	ff e0                	jmp    *%rax
    1102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1108:	c3                   	ret
    1109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001110 <__do_global_dtors_aux>:
    1110:	f3 0f 1e fa          	endbr64
    1114:	80 3d 0d 2f 00 00 00 	cmpb   $0x0,0x2f0d(%rip)        # 4028 <__TMC_END__>
    111b:	75 2b                	jne    1148 <__do_global_dtors_aux+0x38>
    111d:	55                   	push   %rbp
    111e:	48 83 3d ba 2e 00 00 	cmpq   $0x0,0x2eba(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1125:	00 
    1126:	48 89 e5             	mov    %rsp,%rbp
    1129:	74 0c                	je     1137 <__do_global_dtors_aux+0x27>
    112b:	48 8b 3d ee 2e 00 00 	mov    0x2eee(%rip),%rdi        # 4020 <__dso_handle>
    1132:	e8 29 ff ff ff       	call   1060 <__cxa_finalize@plt>
    1137:	e8 64 ff ff ff       	call   10a0 <deregister_tm_clones>
    113c:	c6 05 e5 2e 00 00 01 	movb   $0x1,0x2ee5(%rip)        # 4028 <__TMC_END__>
    1143:	5d                   	pop    %rbp
    1144:	c3                   	ret
    1145:	0f 1f 00             	nopl   (%rax)
    1148:	c3                   	ret
    1149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001150 <frame_dummy>:
    1150:	f3 0f 1e fa          	endbr64
    1154:	e9 77 ff ff ff       	jmp    10d0 <register_tm_clones>
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <test>:
    1160:	41 56                	push   %r14
    1162:	53                   	push   %rbx
    1163:	50                   	push   %rax
    1164:	89 fb                	mov    %edi,%ebx
    1166:	48 8d 3d 9b 0e 00 00 	lea    0xe9b(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    116d:	e8 be fe ff ff       	call   1030 <puts@plt>
    1172:	8d 43 01             	lea    0x1(%rbx),%eax
    1175:	0f b6 f0             	movzbl %al,%esi
    1178:	4c 8d 35 85 0e 00 00 	lea    0xe85(%rip),%r14        # 2004 <_IO_stdin_used+0x4>
    117f:	4c 89 f7             	mov    %r14,%rdi
    1182:	31 c0                	xor    %eax,%eax
    1184:	e8 b7 fe ff ff       	call   1040 <printf@plt>
    1189:	4c 89 f7             	mov    %r14,%rdi
    118c:	89 de                	mov    %ebx,%esi
    118e:	31 c0                	xor    %eax,%eax
    1190:	e8 ab fe ff ff       	call   1040 <printf@plt>
    1195:	48 83 c4 08          	add    $0x8,%rsp
    1199:	5b                   	pop    %rbx
    119a:	41 5e                	pop    %r14
    119c:	c3                   	ret
    119d:	0f 1f 00             	nopl   (%rax)

00000000000011a0 <main>:
    11a0:	55                   	push   %rbp
    11a1:	41 56                	push   %r14
    11a3:	53                   	push   %rbx
    11a4:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    11a8:	31 f6                	xor    %esi,%esi
    11aa:	ba 0a 00 00 00       	mov    $0xa,%edx
    11af:	e8 9c fe ff ff       	call   1050 <strtol@plt>
    11b4:	48 89 c3             	mov    %rax,%rbx
    11b7:	0f be eb             	movsbl %bl,%ebp
    11ba:	4c 8d 35 43 0e 00 00 	lea    0xe43(%rip),%r14        # 2004 <_IO_stdin_used+0x4>
    11c1:	4c 89 f7             	mov    %r14,%rdi
    11c4:	89 ee                	mov    %ebp,%esi
    11c6:	31 c0                	xor    %eax,%eax
    11c8:	e8 73 fe ff ff       	call   1040 <printf@plt>
    11cd:	48 8d 3d 34 0e 00 00 	lea    0xe34(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    11d4:	e8 57 fe ff ff       	call   1030 <puts@plt>
    11d9:	40 0f b6 ed          	movzbl %bpl,%ebp
    11dd:	83 c3 01             	add    $0x1,%ebx
    11e0:	0f b6 f3             	movzbl %bl,%esi
    11e3:	4c 89 f7             	mov    %r14,%rdi
    11e6:	31 c0                	xor    %eax,%eax
    11e8:	e8 53 fe ff ff       	call   1040 <printf@plt>
    11ed:	4c 89 f7             	mov    %r14,%rdi
    11f0:	89 ee                	mov    %ebp,%esi
    11f2:	31 c0                	xor    %eax,%eax
    11f4:	e8 47 fe ff ff       	call   1040 <printf@plt>
    11f9:	31 c0                	xor    %eax,%eax
    11fb:	5b                   	pop    %rbx
    11fc:	41 5e                	pop    %r14
    11fe:	5d                   	pop    %rbp
    11ff:	c3                   	ret

Disassembly of section .fini:

0000000000001200 <_fini>:
    1200:	f3 0f 1e fa          	endbr64
    1204:	48 83 ec 08          	sub    $0x8,%rsp
    1208:	48 83 c4 08          	add    $0x8,%rsp
    120c:	c3                   	ret
